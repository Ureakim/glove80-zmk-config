/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 0>, <&to 0>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&kp F1         &kp F2      &kp F3     &kp F4         &kp F5                                                                                                                 &kp F6            &kp F7                &kp F8                 &kp F9             &kp F10
&kp GRAVE      &kp N1      &kp N2     &kp N3         &kp N4     &kp N5                                                                                              &kp N6  &kp N7            &kp N8                &kp N9                 &kp N0             &kp LS(GRAVE)
&kp TAB        &kp Q       &kp W      &kp E          &kp R      &kp T                                                                                               &kp Y   &kp U             &kp I                 &kp O                  &kp P              &kp BSLH
&kp ESC        &kp A       &kp S      &kp D          &kp F      &kp G                                                                                               &kp H   &kp J             &kp K                 &kp L                  &kp SEMI           &kp SQT
&kp LS(GRAVE)  &kp Z       &kp X      &kp C          &kp V      &kp B   &kp LEFT_GUI  &kp LEFT_ALT    &mo 2            &mo 1       &kp RIGHT_ALT     &kp RIGHT_GUI  &kp N   &kp M             &kp COMMA             &kp DOT                &kp FSLH           &kp GRAVE
&kp SLASH      &kp LS(N8)  &kp MINUS  &kp LS(EQUAL)  &kp EQUAL          &kp SPACE     &kp LEFT_SHIFT  &kp BACKSPACE    &kp DELETE  &kp LEFT_CONTROL  &kp ENTER              &kp LEFT_BRACKET  &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)  &kp RIGHT_BRACKET  &magic 3 0
            >;
        };

        Numove {
            bindings = <
&none  &none  &none         &none         &none                                                                                &none              &none            &none            &none  &none
&none  &none  &none         &none         &none         &none                                                  &none           &none              &none            &none            &none  &none
&none  &none  &kp N7        &kp N8        &kp N9        &none                                                  &kp HOME        &kp PAGE_DOWN      &kp PAGE_UP      &kp END          &none  &none
&none  &none  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none                                                  &kp LEFT_ARROW  &kp DOWN_ARROW     &kp UP_ARROW     &kp RIGHT_ARROW  &none  &none
&none  &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &trans  &none   &none    &none  &none   &trans  &none           &kp K_SCROLL_DOWN  &kp K_SCROLL_UP  &none            &none  &none
&none  &none  &kp N0        &none         &kp DOT              &trans  &trans  &none    &none  &trans  &none                   &none              &none            &none            &none  &none
            >;
        };

        Signs {
            bindings = <
&none      &none       &none       &none       &none                                                                               &none       &none       &none       &none       &none
&none      &none       &none       &none       &none       &none                                                       &none       &none       &none       &none       &none       &none
&none      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                                                      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &none
&kp GRAVE  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                                                  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &kp LS(GRAVE)
&none      &none       &none       &none       &none       &none       &trans  &none   &none    &none  &none   &trans  &none       &none       &none       &none       &none       &none
&trans     &trans      &trans      &trans      &trans                  &trans  &trans  &none    &none  &trans  &none               &trans      &trans      &trans      &trans      &none
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                       &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                               &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                     &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                     &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none           &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB    &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };
    };
};
